## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- exp(W - 4)
sex <- rbinom(n, 1, .5)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
mean(statusW)
table(W)
tmp
sum(is.na(tmp))
sum(is.nan(tmp))
coef(cox1)
coef(cox2)
table(treat)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
coef(cox2)
summary(cox2)
summary(tmp)
with(tmp, table(W))
lambda <- 1e-4                                            # Konstant baseline hazard
starttime <- Sys.time()
ests <- foreach(i = 1:100, .options.RNG = 27102020, .combine = "rbind",
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- exp(W - 4)
sex <- rbinom(n, 1, .5)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
SE <- emSE(model)[1]
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
# nn <- floor((T-1e-10) / D)
# tmp2 <- do.call("rbind", lapply(1:n, function(i){
#   sek <- seq(0, D * nn[i], D)
#   data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]), status = c(rep(0, length(sek)-1), status[i]),
#              sex = sex[i], treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])), W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
# }))
# tmp2$W[tmp2$W >= M] <- M
# cox3 <- coxph(Surv(time1,time2,status) ~ treat + sex + strata(factor(W)), data = tmp2)
# cat("newCox", i, ": ", coef(cox3)[1], "\n")
# c(ests, SE, coef(cox1)[1], coef(cox2)[1], coef(cox3)[1])
c(ests, SE, coef(cox1)[1], coef(cox2)[1])
## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- exp(W - 4)
sex <- rbinom(n, 1, .5)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
summary(cox2)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- exp(W - 4)
sex <- rbinom(n, 1, .5)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
coef(cox2)
table(W)
table(W[statusW == 1])
tmp
?Surv
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
coef(cox1)
coef(cox3)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
coef(cox2)
summary(cox2)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + factor(W) + sex, data = tmp)
summary(cox2)
with(tmp, table(W))
with(tmp, table(W, sex))
with(tmp, table(W, treat))
with(tmp, table(W, treat, sex))
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(W) + sex, data = tmp)
summary(cox2)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(W), data = tmp)
summary(cox2)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
summary(cox2)
with(tmp, W[status == 1])
with(tmp, table(W[status == 1]))
with(tmp, table(W, sex))
## tau <- 1000
lambdaPois <- 1                                           # Parameter til poissonfordeling
starttime <- Sys.time()
ests <- foreach(i = 1:100, .options.RNG = 27102020, .combine = "rbind",
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
# W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- exp(W - 4)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
SE <- emSE(model)[1]
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
# nn <- floor((T-1e-10) / D)
# tmp2 <- do.call("rbind", lapply(1:n, function(i){
#   sek <- seq(0, D * nn[i], D)
#   data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]), status = c(rep(0, length(sek)-1), status[i]),
#              sex = sex[i], treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])), W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
# }))
# tmp2$W[tmp2$W >= M] <- M
# cox3 <- coxph(Surv(time1,time2,status) ~ treat + sex + strata(factor(W)), data = tmp2)
# cat("newCox", i, ": ", coef(cox3)[1], "\n")
# c(ests, SE, coef(cox1)[1], coef(cox2)[1], coef(cox3)[1])
c(ests, SE, coef(cox1)[1], coef(cox2)[1])
## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
apply(ests,2,mean)
exp(mean(-ests[,1]))
mean(ests[,2])
sd(ests[,1])
mean(ests[,ncol(ests)])
exp(mean(ests[,ncol(ests)]))
mean(ests[,1]-1.96*ests[,2]<log(2) & ests[,1]+1.96*ests[,2]>log(2))
lambdaPois
with(tmp, table(W, treat))
with(tmp, table(W, sex))
starttime <- Sys.time()
ests <- foreach(i = 1:100, .options.RNG = 27102020, .combine = "rbind",
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
# W <- sample(1:4, n, replace = TRUE)
# UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
UW <- exp(W - 4)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
SE <- emSE(model)[1]
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
# nn <- floor((T-1e-10) / D)
# tmp2 <- do.call("rbind", lapply(1:n, function(i){
#   sek <- seq(0, D * nn[i], D)
#   data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]), status = c(rep(0, length(sek)-1), status[i]),
#              sex = sex[i], treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])), W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
# }))
# tmp2$W[tmp2$W >= M] <- M
# cox3 <- coxph(Surv(time1,time2,status) ~ treat + sex + strata(factor(W)), data = tmp2)
# cat("newCox", i, ": ", coef(cox3)[1], "\n")
# c(ests, SE, coef(cox1)[1], coef(cox2)[1], coef(cox3)[1])
c(ests, SE, coef(cox1)[1], coef(cox2)[1])
## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
mean(-ests[,1])
ests
ests[,1]
apply(ests,2,mean)
hist(ests[,1])
hist(ests[,1][ests[,1]> -5])
mean(ests[,1][ests[,1]> -5])
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
# W <- sample(1:4, n, replace = TRUE)
# UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
UW <- exp(W - 4)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
ests
coef(cox1)
coef(cox2)
exp(W-4)
table(exp(W-4))
starttime <- Sys.time()
ests <- foreach(i = 1:100, .options.RNG = 27102020, .combine = "rbind",
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
# W <- sample(1:4, n, replace = TRUE)
# UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
UW <- pmin(exp(W - 4), 1)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
SE <- emSE(model)[1]
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
# nn <- floor((T-1e-10) / D)
# tmp2 <- do.call("rbind", lapply(1:n, function(i){
#   sek <- seq(0, D * nn[i], D)
#   data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]), status = c(rep(0, length(sek)-1), status[i]),
#              sex = sex[i], treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])), W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
# }))
# tmp2$W[tmp2$W >= M] <- M
# cox3 <- coxph(Surv(time1,time2,status) ~ treat + sex + strata(factor(W)), data = tmp2)
# cat("newCox", i, ": ", coef(cox3)[1], "\n")
# c(ests, SE, coef(cox1)[1], coef(cox2)[1], coef(cox3)[1])
c(ests, SE, coef(cox1)[1], coef(cox2)[1])
## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
mean(-ests[,1])
apply(ests,2,mean)
mean(ests[,1]-1.96*ests[,2]<log(2) & ests[,1]+1.96*ests[,2]>log(2))
apply(ests,2,mean)
ests[,1]
hist(ests[,1])
mean(ests[,1])
apply(ests,2,mean)
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
table(W, sex)
table(pmin(W,4), sex)
starttime <- Sys.time()
ests <- foreach(i = 1:100, .options.RNG = 27102020, .combine = "rbind",
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
# W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- pmin(exp(W - 4), 1)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
SE <- emSE(model)[1]
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
# nn <- floor((T-1e-10) / D)
# tmp2 <- do.call("rbind", lapply(1:n, function(i){
#   sek <- seq(0, D * nn[i], D)
#   data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]), status = c(rep(0, length(sek)-1), status[i]),
#              sex = sex[i], treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])), W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
# }))
# tmp2$W[tmp2$W >= M] <- M
# cox3 <- coxph(Surv(time1,time2,status) ~ treat + sex + strata(factor(W)), data = tmp2)
# cat("newCox", i, ": ", coef(cox3)[1], "\n")
# c(ests, SE, coef(cox1)[1], coef(cox2)[1], coef(cox3)[1])
c(ests, SE, coef(cox1)[1], coef(cox2)[1])
## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
mean(-ests[,1])
apply(ests,2,mean)
starttime <- Sys.time()
ests <- foreach(i = 1:50, .combine = "rbind", #.options.RNG = 27102020,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
# W <- rpois(n, lambda = lambdaPois) + 1                         # Antal behandlinger
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = lambdaPois) + 1
W[sex == 1] <- rpois(sum(sex == 1), lambda = 3) + 1
# W <- sample(1:4, n, replace = TRUE)
UW <- (W == 1) + 1.5 * (W == 2) + 4 * (W == 3) + 6 * (W >= 4)     # HR for forskellige antal behandlinger
# UW <- pmin(exp(W - 4), 1)
u <- runif(n)
br <- 1 - exp(-lambda * W * D * UW * HR * HRsex^sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * UW[u < br] * HRsex^sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) + lambda * UW[u >= br] * HRsex^sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * UW[u >= br] * HRsex^sex[u >= br])
tau <- runif(n, 0, 1000)                                       # Censorering
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # Vi observerer ikke W for alle
treat <- as.numeric(T <= (D * W))                              # Behandling eller ej ved event tidspunkt
statusW <- 1-treat                                             # Fortæller os om vi observerer W
statusW[obsW >= M] <- 1                                        # Vi kender niveau hvis de behandles 4 eller flere gange
tmp <- do.call("rbind", lapply(1:n, function(i){
if(treat[i] == 1) data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0, W = min(obsW[i],M),
statusW = statusW[i], sex = sex[i])
else data.table(id = i, time1 = c(0, D*W[i]), time2 = c(D*W[i], T[i]), status = c(0, status[i]),
treat = c(0,1), W = min(obsW[i],M), statusW = statusW[i], sex = sex[i])
}))
cox1 <- coxph(Surv(time1,time2,status) ~ treat + sex, data = tmp)
cox2 <- coxph(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp)
model <- em(Surv(time1,time2,status) ~ treat + strata(factor(W)) + sex, data = tmp, M = M)
ests <- coef(model$model)[1]
SE <- emSE(model)[1]
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
# nn <- floor((T-1e-10) / D)
# tmp2 <- do.call("rbind", lapply(1:n, function(i){
#   sek <- seq(0, D * nn[i], D)
#   data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]), status = c(rep(0, length(sek)-1), status[i]),
#              sex = sex[i], treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])), W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
# }))
# tmp2$W[tmp2$W >= M] <- M
# cox3 <- coxph(Surv(time1,time2,status) ~ treat + sex + strata(factor(W)), data = tmp2)
# cat("newCox", i, ": ", coef(cox3)[1], "\n")
# c(ests, SE, coef(cox1)[1], coef(cox2)[1], coef(cox3)[1])
c(ests, SE, coef(cox1)[1], coef(cox2)[1])
## c(i, ests)
}
endtime <- Sys.time()
difftime(endtime,starttime)
apply(ests,2,mean)
mean(-ests[,1])
hist(-ests[,1])
mean(ests[,1]-1.96*ests[,2]<log(2) & ests[,1]+1.96*ests[,2]>log(2))
mean(ests[,2])
sd(ests[,1])
mean(-ests[,1]-1.96*ests[,2]<log(2) & -ests[,1]+1.96*ests[,2]>log(2))
