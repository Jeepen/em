statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (ests + 1.96 * SE > beta)
cat("estimate", i, ": ", ests2, "\n")
cat("standard error", i, ": ", SE2, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = ests, em_se = SE, em_cover = model2_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
ests <- foreach(i = 1:nsim, .combine = "rbind", .options.RNG = 13102022,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = .5) + 1
W[sex == 1] <- rpois(sum(sex), lambda = 2) + 1
u <- runif(n)
br <- 1 - exp(-lambda * W * D * HR * HRsex ^ sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * HRsex ^ sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) +
lambda * HRsex ^ sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * HRsex ^ sex[u >= br])
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # We don't always observe real W
treat <- as.numeric(T <= (D * W))                              # treated at time of event
statusW <- 1 - treat                                           # Do we observe true W?
statusW[obsW >= M] <- 1                                        # We observe enough about W if it is big
tmp <- do.call("rbind", lapply(1:n, function(i) {
if (treat[i] == 1) {
data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0,
W = min(obsW[i], M), statusW = statusW[i], sex = sex[i])
}
else{
data.table(id = i, time1 = c(0, D * W[i]), time2 = c(D * W[i], T[i]),
status = c(0, status[i]), treat = c(0, 1), W = min(obsW[i], M),
statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (ests + 1.96 * SE > beta)
cat("estimate", i, ": ", ests2, "\n")
cat("standard error", i, ": ", SE2, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = ests, em_se = SE, em_cover = model_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
ests <- foreach(i = 1:nsim, .combine = "rbind", .options.RNG = 13102022,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = .5) + 1
W[sex == 1] <- rpois(sum(sex), lambda = 2) + 1
u <- runif(n)
br <- 1 - exp(-lambda * W * D * HR * HRsex ^ sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * HRsex ^ sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) +
lambda * HRsex ^ sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * HRsex ^ sex[u >= br])
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # We don't always observe real W
treat <- as.numeric(T <= (D * W))                              # treated at time of event
statusW <- 1 - treat                                           # Do we observe true W?
statusW[obsW >= M] <- 1                                        # We observe enough about W if it is big
tmp <- do.call("rbind", lapply(1:n, function(i) {
if (treat[i] == 1) {
data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0,
W = min(obsW[i], M), statusW = statusW[i], sex = sex[i])
}
else{
data.table(id = i, time1 = c(0, D * W[i]), time2 = c(D * W[i], T[i]),
status = c(0, status[i]), treat = c(0, 1), W = min(obsW[i], M),
statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (ests + 1.96 * SE > beta)
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = ests, em_se = SE, em_cover = model_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
ests
nsim
dim(ests)
nsim
starttime <- Sys.time()
ests <- foreach(i = 1:nsim, .combine = "rbind", .options.RNG = 13102022,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = .5) + 1
W[sex == 1] <- rpois(sum(sex), lambda = 2) + 1
u <- runif(n)
br <- 1 - exp(-lambda * W * D * HR * HRsex ^ sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * HRsex ^ sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) +
lambda * HRsex ^ sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * HRsex ^ sex[u >= br])
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # We don't always observe real W
treat <- as.numeric(T <= (D * W))                              # treated at time of event
statusW <- 1 - treat                                           # Do we observe true W?
statusW[obsW >= M] <- 1                                        # We observe enough about W if it is big
tmp <- do.call("rbind", lapply(1:n, function(i) {
if (treat[i] == 1) {
data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0,
W = min(obsW[i], M), statusW = statusW[i], sex = sex[i])
}
else{
data.table(id = i, time1 = c(0, D * W[i]), time2 = c(D * W[i], T[i]),
status = c(0, status[i]), treat = c(0, 1), W = min(obsW[i], M),
statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (ests + 1.96 * SE > beta)
cat("estimate", i, ": ", ests, "\n")
cat("standard error", i, ": ", SE, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = est, em_se = SE, em_cover = model_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
ests <- foreach(i = 1:nsim, .combine = "rbind", .options.RNG = 13102022,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = .5) + 1
W[sex == 1] <- rpois(sum(sex), lambda = 2) + 1
u <- runif(n)
br <- 1 - exp(-lambda * W * D * HR * HRsex ^ sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * HRsex ^ sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) +
lambda * HRsex ^ sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * HRsex ^ sex[u >= br])
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # We don't always observe real W
treat <- as.numeric(T <= (D * W))                              # treated at time of event
statusW <- 1 - treat                                           # Do we observe true W?
statusW[obsW >= M] <- 1                                        # We observe enough about W if it is big
tmp <- do.call("rbind", lapply(1:n, function(i) {
if (treat[i] == 1) {
data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0,
W = min(obsW[i], M), statusW = statusW[i], sex = sex[i])
}
else{
data.table(id = i, time1 = c(0, D * W[i]), time2 = c(D * W[i], T[i]),
status = c(0, status[i]), treat = c(0, 1), W = min(obsW[i], M),
statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (ests + 1.96 * SE > beta)
cat("estimate", i, ": ", est, "\n")
cat("standard error", i, ": ", SE, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = est, em_se = SE, em_cover = model_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
endtime <- Sys.time()
head(ests)
starttime <- Sys.time()
ests <- foreach(i = 1:nsim, .combine = "rbind", .options.RNG = 13102022,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = .5) + 1
W[sex == 1] <- rpois(sum(sex), lambda = 2) + 1
u <- runif(n)
br <- 1 - exp(-lambda * W * D * HR * HRsex ^ sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * HRsex ^ sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) +
lambda * HRsex ^ sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * HRsex ^ sex[u >= br])
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # We don't always observe real W
treat <- as.numeric(T <= (D * W))                              # treated at time of event
statusW <- 1 - treat                                           # Do we observe true W?
statusW[obsW >= M] <- 1                                        # We observe enough about W if it is big
tmp <- do.call("rbind", lapply(1:n, function(i) {
if (treat[i] == 1) {
data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0,
W = min(obsW[i], M), statusW = statusW[i], sex = sex[i])
}
else{
data.table(id = i, time1 = c(0, D * W[i]), time2 = c(D * W[i], T[i]),
status = c(0, status[i]), treat = c(0, 1), W = min(obsW[i], M),
statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (est + 1.96 * SE > beta)
cat("estimate", i, ": ", est, "\n")
cat("standard error", i, ": ", SE, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = est, em_se = SE, em_cover = model_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
endtime <- Sys.time()
dim(ests)
head(ests)
goodstuff <- readRDS("intermediate_results//simresults.rds")
head(goodstuff)
head(goodstuff)
head(ests)
head(goodstuff$ests)
dim(ests)
dim(goodstuff$ests)
ests <- goodstuff$ests
head(ests)
dim(ests)
## ---------------------------
##
## Script name: simulation.R
##
## Purpose of script: Simulation for paper
##
## Author: Jeppe Madsen
##
## Date Created: 2023-11-26
##
# Seed an packages --------------------------------------------------------
set.seed(13072020)
library(renv)
library(data.table)
library(mets)
library(tidyverse)
library(survival)
library(doRNG)
library(doParallel)
cl <- parallel::makeCluster(3)
doParallel::registerDoParallel(cl)
source("functions/functions.R")
# Parameters --------------------------------------------------------------
n <- 2000                                                 # Number of observations per simulation
nsim <- 1000                                              # Number of simulations
lambda <- 1e-4                                            # Constant baseline hazard
HR <- 1.5                                                 # HR of treatment
HRsex <- 2                                                # HR of unmeasured covariate 'sex'
tau <- 1000                                               # Study length
D <- 100                                                  # Time between administrations
M <- 4                                                    # Capped value of W
beta <- -log(HR)                                          # True beta from cox model
# Simulation --------------------------------------------------------------
simresults <- foreach(i = 1:nsim, .combine = "rbind", .options.RNG = 13102022,
.packages = c("data.table", "survival")) %dorng% {
cat("outer iteration: ", i, "\n")
sex <- rbinom(n, 1, .5)
W <- rpois(n, lambda = .5) + 1
W[sex == 1] <- rpois(sum(sex), lambda = 2) + 1
u <- runif(n)
br <- 1 - exp(-lambda * W * D * HR * HRsex ^ sex)
X <- numeric(n)
X[u < br] <- -log(1 - u[u < br]) / (lambda * HR * HRsex ^ sex[u < br])
X[u >= br] <- (-log(1 - u[u >= br]) +
lambda * HRsex ^ sex[u >= br] * W[u >= br] * D * (1 - HR)) /
(lambda * HRsex ^ sex[u >= br])
T <- pmin(X, tau)
status <- as.numeric(X <= tau)
obsW <- pmin(W, ceiling(T / D))                                # We don't always observe real W
treat <- as.numeric(T <= (D * W))                              # treated at time of event
statusW <- 1 - treat                                           # Do we observe true W?
statusW[obsW >= M] <- 1                                        # We observe enough about W if it is big
tmp <- do.call("rbind", lapply(1:n, function(i) {
if (treat[i] == 1) {
data.table(id = i, time1 = 0, time2 = T[i], status = status[i], treat = 0,
W = min(obsW[i], M), statusW = statusW[i], sex = sex[i])
}
else{
data.table(id = i, time1 = c(0, D * W[i]), time2 = c(D * W[i], T[i]),
status = c(0, status[i]), treat = c(0, 1), W = min(obsW[i], M),
statusW = statusW[i], sex = sex[i])
}
}))
cox1 <- coxph(Surv(time1, time2, status) ~ treat, data = tmp)
cc <- confint(cox1)
cox1_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox1_se <- sqrt(cox1$var[1, 1])
cox2 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp)
cc <- confint(cox2)
cox2_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox2_se <- sqrt(cox2$var[1, 1])
model <- em(Surv(time1, time2, status) ~ treat + factor(W), data = tmp, M = M)
est <- coef(model$model)[1]
SE <- emSE(model, M = M)[1]
model_cov <- (est - 1.96 * SE < beta) & (est + 1.96 * SE > beta)
cat("estimate", i, ": ", est, "\n")
cat("standard error", i, ": ", SE, "\n")
nn <- floor((T - 1e-10) / D)
tmp2 <- do.call("rbind", lapply(1:n, function(i) {
sek <- seq(0, D * nn[i], D)
data.table(id = i, time1 = sek, time2 = c(sek[-1], T[i]),
status = c(rep(0, length(sek) - 1), status[i]), sex = sex[i],
treat = c(rep(0, obsW[i]), rep(1, length(sek) - obsW[i])),
W = c(1:obsW[i], rep(obsW[i], length(sek) - obsW[i])))
}))
tmp2$W[tmp2$W >= M] <- M
cox3 <- coxph(Surv(time1, time2, status) ~ treat + factor(W), data = tmp2)
cc <- confint(cox3)
cox3_cov <- cc[1, 1] < beta & cc[1, 2] > beta
cox3_se <- sqrt(cox3$var[1, 1])
cat("newCox", i, ": ", coef(cox3)[1], "\n")
data.frame(em_est = est, em_se = SE, em_cover = model_cov,
cox1_est = coef(cox1)[1], cox1_se = cox1_se, cox1_cover = cox1_cov,
cox2_est = coef(cox2)[1], cox2_se = cox2_se, cox2_cover = cox2_cov,
cox3_est = coef(cox3)[1], cox3_se = cox3_se, cox3_cover = cox3_cov)
}
source("~/Dropbox/phd/em/simulation_code/simulation.R", echo=TRUE)
simresults
head(simresults)
dim(simresults)
apply(simresults, 2, mean)
# Create table ------------------------------------------------------------
beta <- -log(1.5)
# Read data ---------------------------------------------------------------
d <- readRDS("intermediate_results//simresults.rds")
ncol(d)
apply(d[c(1,4,7,10)], 2, mean)
apply(d[c(1,4,7,10)], 2, mean) - beta
Bias <- apply(d[c(1,4,7,10)], 2, mean) - beta
SD <- apply(d[c(1,4,7,10)], 2, sd)
SD
RelativeBias <- Bias / SD
RelativeBias
AvgSE <- apply(d[c(2,5,8,11)], 2, mean)
AvgSE
CI_coverage <- apply(d[c(3,6,9,12)], 2, mean)
CI_coverage
Bias <- apply(d[,c(4,7,10,1)], 2, mean) - beta
SD <- apply(d[,c(4,7,10,1)], 2, sd)
RelativeBias <- Bias / SD
AvgSE <- apply(d[,c(2,5,8,11)], 2, mean)
CI_coverage <- apply(d[,c(6,9,12,3)], 2, mean)
Bias
SD
RelativeBias
AvgSE
CI_coverage
# Package -----------------------------------------------------------------
library(xtable)
install.packages("xtable")
?renv::snapshot
renv::snapshot()
# Package -----------------------------------------------------------------
library(xtable)
# Export table ------------------------------------------------------------
xtable(cbind(Bias, SD, RelativeBias, AvgSE, CI_coverage))
# Export table ------------------------------------------------------------
print(xtable(cbind(Bias, SD, RelativeBias, AvgSE, CI_coverage)), file = "results/table1.tex")
renv::status()
renv::snapshot()
